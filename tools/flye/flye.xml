<tool id="flye" name="Assembly of long and error-prone reads." version="0.1.0">
    <macros>
        <import>macros.xml</import>
    </macros>
    <expand macro="requirements" />
    <version_command>canu --version</version_command>
    <command detect_errors="exit_code">
    <![CDATA[

    #for $counter, $input in enumerate($inputs):
        ln -s '$input' ./input_${counter}.${input.ext} &&
    #end for
    
    flye $mode 
    #for $counter, $input in enumerate($inputs):
        ./input_${counter}.${input.ext}
    #end for

    -o out_dir 
    -g $g
    -t \${GALAXY_SLOTS:-4}
    -i $i
    #if $m:
        -m '$m'
    #end if    
    2>&1
    ]]></command>
    <inputs>
        <param name="inputs" type="data" format="fasta,fasta.gz,fastq,fastq.gz" multiple="true" label="Input reads" />

        <param name="mode" type="select" label="Mode">
            <option value="--nano-raw" selected="true">Nanopore raw</option>
            <option value="--nano-corr">Nanopore corrected</option>
            <option value="--pacbio-raw">PacBio raw</option>
            <option value="--pacbio-corr">PacBio corrected</option>
            <option value="--subassemblies">high-quality contig-like input</option>
        </param>
        <param argument="-g" type="text" label="estimated genome size (for example, 5m or 2.6g)" />
        <param argument="-i" type="integer" value="1" label="number of polishing iterations" />
        <param argument="-m" type="integer"  optional="true" label="minimum overlap between reads (default: auto)" />

    </inputs>
    <outputs>
        <data name="contigs" format="fasta" from_work_dir="out_dir/contigs.fasta" label="${tool.name} on ${on_string} (contigs)">
        </data>
        <data name="scaffolds" format="fasta" from_work_dir="out_dir/scaffolds.fasta" label="${tool.name} on ${on_string} (scaffolds)">
        </data>
        <data name="assembly_info" format="tabular" from_work_dir="out_dir/assembly_info.txt" label="${tool.name} on ${on_string} (assembly_info)">
        </data>
        <data name="assembly_graph" format="data" from_work_dir="out_dir/assembly_graph.dot" label="${tool.name} on ${on_string} (assembly_graph)">
        </data>        
        <data name="flye_log" format="data" from_work_dir="out_dir/flye.log" label="${tool.name} on ${on_string} (log)">
        </data>
    </outputs>
    <tests>
        <test>            
            <param name="inputs" ftype="fasta" value="E.coli_PacBio_40x_first_200_reads.fasta"/>
            <param name="g" value="1m"/>
            <output name="contigs" ftype="fasta" file="result1_contigs.fasta"/>
            <output name="scaffolds" ftype="fasta" file="result1_scaffolds.fasta"/>
            <output name="assembly_info" ftype="tabula" file="result1_assembly_info.txt"/>
            <output name="assembly_graph" ftype="fasta" file="result1_assembly_graph.dot"/>    
        </test>
    </tests>
    <help><![CDATA[
        usage: flye (--pacbio-raw | --pacbio-corr | --nano-raw |
	     --nano-corr | --subassemblies) file1 [file_2 ...]
	     --genome-size size --out-dir dir_path [--threads int]
	     [--iterations int] [--min-overlap int] [--resume]
	     [--debug] [--version] [--help]

Assembly of long and error-prone reads

optional arguments:
  -g size, --genome-size size
                        estimated genome size (for example, 5m or 2.6g)
  -t int, --threads int
                        number of parallel threads (default: 1)
  -i int, --iterations int
                        number of polishing iterations (default: 1)
  -m int, --min-overlap int
                        minimum overlap between reads (default: auto)

Input reads could be in FASTA or FASTQ format, uncompressed
or compressed with gz. Currenlty, raw and corrected reads
from PacBio and ONT are supported. The expected error rates are
<30% for raw and <2% for corrected reads. Additionally,
--subassemblies option performs a consensus assembly of multiple
sets of high-quality contigs. You may specify multiple
files with reads (separated by spaces). Mixing different read
types is not yet supported.

You must provide an estimate of the genome size as input,
which is used for solid k-mers selection. The estimate could
be rough (e.g. withing 0.5x-2x range) and does not affect
the other assembly stages. Standard size modificators are
supported (e.g. 5m or 2.6g)

    ]]></help>
    <expand macro="citations" />
</tool>